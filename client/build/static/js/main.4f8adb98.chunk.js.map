{"version":3,"sources":["pages/UsersPage.js","pages/CreatePage.js","pages/UserPage.js","pages/EditPage.js","pages/AuthPage.js","pages/ProfilePage.js","pages/ResetPage.js","pages/PasswordPage.js","App.js","serviceWorker.js","index.js"],"names":["Users","useState","users","setUsers","token","setToken","useEffect","store","JSON","parse","localStorage","getItem","a","axios","get","headers","authorization","res","data","fetchData","deleteHandler","id","delete","filter","item","_id","className","map","i","key","name","password","email","to","type","onClick","CreateUser","props","history","useHistory","createHandler","e","preventDefault","target","elements","value","post","push","onSubmit","required","htmlFor","data-error","style","UserPage","user","setUser","match","params","EditUser","editHandler","reg","AuthPage","setEmail","setPassword","message","setMessage","loginHandler","length","console","log","setItem","stringify","registerHandler","test","onChange","marginBottom","ProfilePage","file","setFile","img","setImg","fileHandler","files","uploadHandler","formdata","FormData","append","src","alt","width","marginTop","ResetPage","emailHandler","class","for","PasswordPage","userId","setUserId","passwordHandler","App","path","exact","component","UsersPage","CreatePage","EditPage","Boolean","window","location","hostname","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.4f8adb98.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {useEffect,useState} from 'react'\r\n\r\nconst Users = () => {\r\n    \r\n    \r\n    const [users,setUsers] = useState([])\r\n    const [token,setToken] = useState('')\r\n\r\n   \r\n    useEffect(()=>{\r\n        const store = JSON.parse(localStorage.getItem('login'))\r\n        if(store){\r\n          setToken(store.token)\r\n            async function fetchData(){\r\n            const res = await axios.get('/users',{headers:{authorization:store.token}})\r\n            setUsers(res.data)\r\n            }\r\n            fetchData()\r\n        }\r\n    },[])\r\n\r\n    const deleteHandler = async (id) => {\r\n        await axios.delete('/users',{data:{id},headers:{authorization:token}})\r\n        const data = users.filter((item) => item._id !== id)\r\n        setUsers(data)\r\n    }\r\n\r\n    const dataRender = () => {\r\n        return users.map((item,i) => {\r\n            return(\r\n                <tbody key={i}> \r\n                    <tr>\r\n                    <td>{i+1}</td>\r\n                    <td>{item.name}</td>\r\n                    <td>\r\n                        {item.password}\r\n                    </td>\r\n                    <td>\r\n                        {item.email}\r\n                    \r\n                    </td>\r\n                    <td><NavLink to={`/users/${item._id}`}>view profile</NavLink></td>\r\n                    <td>\r\n                    <button type=\"submit\" onClick={() => deleteHandler(item._id)}>delete</button>\r\n                   \r\n                                 \r\n                    </td>\r\n                    </tr>\r\n                    \r\n                </tbody>\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"users\">\r\n             <div className=\"container\">\r\n                 <table>\r\n                <thead>\r\n                    <tr>\r\n                    <th>id</th>\r\n                    <th>user</th>\r\n                    <th>password</th>\r\n                    <th>email</th>\r\n                    <th>profile</th>\r\n                    <th>destroy</th>\r\n                    </tr>\r\n                </thead>\r\n                {dataRender()}\r\n                </table>\r\n            <NavLink to=\"/users/create\">create new user</NavLink>\r\n            <div><NavLink to=\"/profile\">profile</NavLink></div>\r\n            <div><NavLink to=\"/auth\">Auth</NavLink></div>\r\n    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import React from 'react'\r\nimport {NavLink,useHistory} from 'react-router-dom'\r\nimport { useState,useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst CreateUser = (props) => {\r\n    \r\n    let history = useHistory()\r\n    const [token,setToken] = useState('')\r\n\r\n    useEffect(()=>{\r\n        const store = JSON.parse(localStorage.getItem('login'))\r\n        setToken(store.token)\r\n    },[])\r\n\r\n    const createHandler = async (e) => {\r\n        e.preventDefault()\r\n        const name = e.target.elements[0].value\r\n        const email = e.target.elements[1].value\r\n        const password = e.target.elements[2].value\r\n        await axios.post('/users/create',{name , email , password},{\r\n            headers:{\r\n                authorization:token,\r\n                \r\n            }\r\n        })\r\n        history.push('/users')\r\n    }\r\n    \r\n    return(\r\n        <div className=\"createUser\">\r\n            <div className=\"container\">\r\n            <h1>Create new user</h1>\r\n            <form onSubmit={(e) => createHandler(e)}>\r\n                <div className=\"input-field\">\r\n                    <input id=\"name\" name=\"name\" type=\"text\" className=\"validate\" required/>\r\n                    <label htmlFor=\"name\">name</label>\r\n                    <span className=\"helper-text\" data-error=\"input name\"></span>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <input id=\"email\" name=\"email\" type=\"text\" className=\"validate\" required/>\r\n                    <label htmlFor=\"email\">email</label>\r\n                    <span className=\"helper-text\" data-error=\"input email\"></span>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <input id=\"password\" name=\"password\" type=\"password\" className=\"validate\" required/>\r\n                    <label htmlFor=\"password\">password</label>\r\n                    <span className=\"helper-text\" data-error=\"input password\"></span>\r\n                </div>\r\n                <button className=\"btn waves-effect waves-light\" type=\"submit\">\r\n                     Submit\r\n                    <i className=\"material-icons right\">send</i>\r\n                </button>\r\n             </form>\r\n             <div className=\"link\" style={{'marginTop': '10px'}}>\r\n                 <NavLink to=\"/users\">all users</NavLink>\r\n             </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateUser","import React from 'react'\r\nimport axios from 'axios'\r\nimport {useEffect,useState} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst UserPage = (props) => {\r\n    const [user,setUser] = useState([])\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const res = await axios.get(`/users/${props.match.params.id}`)\r\n            setUser([res.data])\r\n        }\r\n        fetchData()\r\n    },[props.match.params.id])\r\n\r\n\r\n    \r\n\r\n\r\n    const dataRender = () => {\r\n        return user.map((item,i) => {\r\n            return(\r\n                <tbody key={i}> \r\n                    <tr>\r\n                    <td>{i+1}</td>\r\n                    <td>{item.name}</td>\r\n                    <td>\r\n                        {item.password}\r\n                    </td>\r\n                    <td>\r\n                        {item.email}\r\n                    </td>\r\n                    <td><NavLink to={`/users/${props.match.params.id}/edit`}>edit user</NavLink></td>\r\n                    </tr>\r\n                </tbody>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"user\">\r\n             <div className=\"container\">\r\n                <table>\r\n                <thead>\r\n                    <tr>\r\n                    <th>id</th>\r\n                    <th>username</th>\r\n                    <th>password</th>\r\n                    <th>email</th>\r\n                    <th>edit</th>\r\n                    </tr>\r\n                </thead>\r\n                {dataRender()}\r\n                </table>\r\n               <div><NavLink to=\"/users\">all users</NavLink></div>\r\n                <div><NavLink to=\"/users/create\">create user</NavLink></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPage","import React from 'react'\r\nimport {NavLink,useHistory} from 'react-router-dom'\r\nimport {useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst EditUser = (props) => {\r\n\r\n    const history = useHistory()\r\n    const [token,setToken] = useState('')\r\n    const [user,setUser] = useState({})\r\n\r\n    useEffect(()=>{\r\n        const store = JSON.parse(localStorage.getItem('login'))\r\n        if(store){\r\n            setToken(store.token)\r\n            async function fetchData(){\r\n                const res = await axios.post(`/users/${props.match.params.id}/data`,{id:props.match.params.id})\r\n                setUser(res.data)\r\n            }\r\n            fetchData()\r\n        }\r\n    },[props.match.params.id])\r\n\r\n    const editHandler = async (e) => {\r\n        e.preventDefault()\r\n        const name = e.target.elements[0].value\r\n        const email = e.target.elements[1].value\r\n        const password = e.target.elements[2].value\r\n        await axios.post(`/users/${props.match.params.id}/edit`,{name,email,password,id:props.match.params.id},\r\n        {headers:{\r\n            authorization:token\r\n        }})\r\n        history.push('/users')\r\n    }\r\n\r\n    return(\r\n        <div className=\"EditUser\">\r\n            <div className=\"container\">\r\n            <h1>Editing {user.name} </h1>\r\n            <form onSubmit={(e) => editHandler(e)}>\r\n                <div className=\"input-field\">\r\n                    <input id=\"name\" name=\"name\" type=\"text\" className=\"validate\" required/>\r\n                    <label htmlFor=\"name\">name</label>\r\n                    <span className=\"helper-text\" data-error=\"input name\"></span>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <input id=\"email\" name=\"email\" type=\"text\" className=\"validate\" required/>\r\n                    <label htmlFor=\"email\">email</label>\r\n                    <span className=\"helper-text\" data-error=\"input email\"></span>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <input id=\"password\" name=\"password\" type=\"password\" className=\"validate\" required/>\r\n                    <label htmlFor=\"password\">password</label>\r\n                    <span className=\"helper-text\" data-error=\"input password\"></span>\r\n                </div>\r\n                <button className=\"btn waves-effect waves-light\" type=\"submit\">Submit\r\n                    <i className=\"material-icons right\">send</i>\r\n                </button>\r\n             </form>\r\n             <div className=\"link\" style={{'marginTop': '10px'}}>\r\n                 <NavLink to=\"/users\">all users</NavLink>\r\n             </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditUser","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory,NavLink } from \"react-router-dom\";\r\nimport 'materialize-css'\r\n/* eslint-disable */ const reg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\nconst AuthPage = () => {\r\n    \r\n    let history = useHistory()\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [token,setToken] = useState('')\r\n    const [message,setMessage] = useState('')\r\n\r\n    const loginHandler = async () => {\r\n        if(email.length > 5 && password.length > 1){\r\n            const res = await axios.post('/auth/login',{email,password})\r\n            const store = res.data\r\n            setToken(store)\r\n            setMessage(store.message)\r\n            console.log(store)\r\n            localStorage.setItem('login',JSON.stringify(store))\r\n            if(store.token){\r\n                history.push('/users')\r\n            }\r\n        }\r\n        else{\r\n            setMessage('введите корректные данные')\r\n        }\r\n    }\r\n\r\n    const registerHandler = async () => {\r\n            if(reg.test(email) && password.length > 1){\r\n                const res = await axios.post('/auth/register',{email,password})\r\n                setMessage(res.data.message)\r\n            }\r\n            else{\r\n                setMessage('введите корректные данные')\r\n            }\r\n    }\r\n\r\n    return (\r\n             <div className=\"auth\">\r\n                 <div className=\"container\">\r\n                 <h1>Login</h1>\r\n                <div className=\"input-field\">\r\n                    <input id=\"email\" onChange={(e) => setEmail(e.target.value)}name=\"email\" type=\"text\" className=\"validate\" required/>\r\n                    <label htmlFor=\"email\">email</label>\r\n                    <span className=\"helper-text\" data-error=\"input email\"></span>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <input id=\"password\"  onChange={(e) => setPassword(e.target.value)} name=\"password\" type=\"password\" className=\"validate\" required/>\r\n                    <label htmlFor=\"password\">password</label>\r\n                    <span className=\"helper-text\" data-error=\"input password\"></span>\r\n                </div>\r\n                <div>\r\n                <span>{message}</span>\r\n                </div>\r\n                <div style={{marginBottom:'20px'}}><NavLink to=\"/reset\">reset password</NavLink></div>\r\n                <button className=\"btn waves-effect waves-light\" onClick={loginHandler} type=\"submit\">login\r\n                    <i className=\"material-icons right\">login</i>\r\n                </button>\r\n                <button style={{'marginLeft':'10px'}} onClick={registerHandler} className=\"btn waves-effect waves-light\" type=\"submit\">register\r\n                </button>\r\n                </div>\r\n             </div>\r\n    )\r\n}\r\n\r\nexport default AuthPage","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst ProfilePage = () => {\r\n\r\n    const [token,setToken] = useState('')\r\n    const [file,setFile] = useState('')\r\n    const [img,setImg] = useState('')\r\n    const [email,setEmail] = useState('')\r\n\r\n    useEffect(()=>{\r\n        const store = JSON.parse(localStorage.getItem('login'))\r\n        setToken(store.token)\r\n\r\n        async function fetchData (){\r\n            const res = await axios.get('/profile',{headers:{authorization : store.token}})\r\n            setImg(res.data.img)\r\n            setEmail(res.data.email)\r\n        }\r\n        fetchData()\r\n    },[])\r\n\r\n\r\n    const fileHandler = async (e) => {\r\n        let file = e.target.files[0]\r\n        setFile(file)\r\n    }\r\n\r\n    const uploadHandler = async () => {\r\n\r\n        const formdata = new FormData()\r\n        formdata.append('avatar',file)\r\n\r\n\r\n        const res = await axios.post('/profile',formdata,\r\n        {\r\n            headers:{\r\n                authorization:token\r\n            }\r\n        })\r\n        setImg(res.data.img)\r\n        console.log(res)\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"profile\">\r\n            <div className=\"container\">\r\n            <div className=\"left\">\r\n            <h1>Profile photo</h1>\r\n                {img  \r\n                ?<div>\r\n                    <img src={img} alt=\"img\" width=\"300\"/>\r\n                </div>\r\n                :<div>нет фото</div>\r\n                }\r\n            </div>\r\n            <div className=\"right\" style={{marginTop : '100px'}}>\r\n            <span><h5>ваш email</h5>{email}</span>\r\n                <div className=\"file-field input-field\">\r\n                    <div className=\"btn\">\r\n                        <span>File</span>\r\n                        <input onChange={(e) => fileHandler(e)} name=\"avatar\" type=\"file\"/>\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\"/>\r\n                    </div>\r\n                    </div>\r\n                <button className=\"btn waves-effect waves-light\" onClick={uploadHandler}>change photo</button>\r\n                <div style={{marginTop:'20px'}}><NavLink to=\"/users\">All Users</NavLink></div>\r\n            </div>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePage","import React from 'react'\r\nimport {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\n/* eslint-disable */ const reg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\n\r\nconst ResetPage = () => {\r\n    const history = useHistory()\r\n    const [email,setEmail] = useState('')\r\n    const [message,setMessage] = useState('')\r\n\r\n    const emailHandler = async () => {\r\n        if(reg.test(email)){\r\n            const res = await axios.post('/auth/reset',{email})\r\n            setMessage(res.data.message)\r\n            if(res.data.message !== 'нет такого юзера'){\r\n                history.push('/auth')\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"Reset\">\r\n            <div className=\"container\">\r\n                <h1>Reset password</h1>\r\n                <div class=\"row\">\r\n                    <div class=\"input-field col s12\">\r\n                    <input onChange={e => setEmail(e.target.value)} id=\"email\" type=\"email\" class=\"validate\"/>\r\n                    <label for=\"email\">Email</label>\r\n                </div>\r\n                <div style={{marginTop : '10px',marginBottom:'5px'}}>\r\n                 <span>{message}</span>\r\n                </div>\r\n                <button onClick={emailHandler} class=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">reset\r\n                    <i class=\"material-icons right\">send</i>\r\n                </button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResetPage","import React, { useEffect } from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst PasswordPage = (props) => {\r\n    const history = useHistory()\r\n    const [password,setPassword] = useState('')\r\n    const [userId,setUserId] = useState('')\r\n\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const res = await axios.get(`/auth/password/${props.match.params.token}`)\r\n            if(res.data.user){\r\n                setUserId(res.data.user.userId)\r\n            }\r\n        }\r\n        fetchData()\r\n    },[props.match.params.token])\r\n\r\n\r\n\r\n    const passwordHandler = async () => {\r\n        if(password.length > 1){\r\n            await axios.post(`/auth/password`,{password,userId})\r\n            history.push('/auth')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"Reset\">\r\n            <div className=\"container\">\r\n                <h1>New password</h1>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                    <input onChange={e => setPassword(e.target.value)} id=\"password\" type=\"password\" className=\"validate\" required/>\r\n                    <label htmlFor=\"email\">Password</label>\r\n                </div>\r\n                <button onClick={passwordHandler} className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">new password \r\n                    <i className=\"material-icons right\">send</i>\r\n                </button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasswordPage","import React from 'react';\r\nimport './App.css';\r\nimport {Route,Switch,Redirect} from 'react-router-dom'\r\nimport UsersPage from './pages/UsersPage';\r\nimport CreatePage from './pages/CreatePage'\r\nimport UserPage from './pages/UserPage'\r\nimport EditPage from './pages/EditPage'\r\nimport AuthPage from './pages/AuthPage'\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport ResetPage from './pages/ResetPage';\r\nimport PasswordPage from './pages/PasswordPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/auth\" exact component={AuthPage}/>\r\n          <Route path=\"/users\" exact component={UsersPage}/>\r\n          <Route path=\"/users/create\" component={CreatePage}/> \r\n          <Route path=\"/users/:id\" exact component={UserPage}/>\r\n          <Route path=\"/users/:id/edit\" component={EditPage}/>\r\n          <Route path=\"/profile\" component={ProfilePage}/>\r\n          <Route path=\"/reset\" component={ResetPage}/>\r\n          <Route path=\"/auth/password/:token\"  component={PasswordPage}/>\r\n          <Redirect to=\"/auth\"/>  \r\n        </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\n\r\nrender(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}